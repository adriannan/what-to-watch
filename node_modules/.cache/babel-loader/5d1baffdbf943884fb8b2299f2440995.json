{"ast":null,"code":"var _jsxFileName = \"/Users/Adrianna/Desktop/front-end/github/netflix/what-to-watch/src/components/MovieCard.js\";\nimport React, { useState } from \"react\";\nimport \"../styles/components.scss\";\nimport movieImg from \"../images/movie.png\";\n\nconst MovieCard = ({\n  title,\n  image,\n  released,\n  runtime,\n  rating,\n  synopsis\n}) => {\n  const [visible, setVisible] = useState(false);\n  const [imageSrc, changeImage] = useState(image);\n\n  function changeVisibleDescription() {\n    setVisible(!visible);\n  }\n\n  function changeImageSrc() {\n    changeImage(movieImg);\n  }\n\n  function showError() {\n    changeImageSrc();\n  }\n\n  const regex = /(<([^>]+)>)/gi;\n  const description = synopsis.replace(regex, \" \").replace(\"&#39;\", \"'\");\n  return React.createElement(\"div\", {\n    className: visible ? \"movie__card movie__card-preview\" : \"movie__card\",\n    onMouseEnter: changeVisibleDescription,\n    onMouseLeave: changeVisibleDescription,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"movie__img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: imageSrc,\n    onError: showError,\n    alt: \"movie\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"movie__info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"movie__tit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, title), React.createElement(\"h3\", {\n    className: \"movie__year\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, released), React.createElement(\"p\", {\n    className: \"movie__time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, runtime), React.createElement(\"p\", {\n    className: \"movie__rate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"material-icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"star\"), Math.round(rating * 10) / 10)), visible && React.createElement(\"div\", {\n    className: \"movie__description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, description));\n};\n\nexport default MovieCard;","map":{"version":3,"sources":["/Users/Adrianna/Desktop/front-end/github/netflix/what-to-watch/src/components/MovieCard.js"],"names":["React","useState","movieImg","MovieCard","title","image","released","runtime","rating","synopsis","visible","setVisible","imageSrc","changeImage","changeVisibleDescription","changeImageSrc","showError","regex","description","replace","Math","round"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,2BAAP;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA,QAAhB;AAA0BC,EAAAA,OAA1B;AAAmCC,EAAAA,MAAnC;AAA2CC,EAAAA;AAA3C,CAAD,KAA2D;AAC3E,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAACI,KAAD,CAAxC;;AACA,WAASS,wBAAT,GAAoC;AAClCH,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD;;AACD,WAASK,cAAT,GAA0B;AACxBF,IAAAA,WAAW,CAACX,QAAD,CAAX;AACD;;AACD,WAASc,SAAT,GAAqB;AACnBD,IAAAA,cAAc;AACf;;AAED,QAAME,KAAK,GAAG,eAAd;AACA,QAAMC,WAAW,GAAGT,QAAQ,CAACU,OAAT,CAAiBF,KAAjB,EAAwB,GAAxB,EAA6BE,OAA7B,CAAqC,OAArC,EAA8C,GAA9C,CAApB;AAEA,SACE;AACE,IAAA,SAAS,EAAET,OAAO,GAAG,iCAAH,GAAuC,aAD3D;AAEE,IAAA,YAAY,EAAEI,wBAFhB;AAGE,IAAA,YAAY,EAAEA,wBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEF,QAAV;AAAoB,IAAA,OAAO,EAAEI,SAA7B;AAAwC,IAAA,GAAG,EAAC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,EAQE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BZ,KAA5B,CADF,EAEE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BE,QAA7B,CAFF,EAGE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BC,OAA5B,CAHF,EAIE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGa,IAAI,CAACC,KAAL,CAAWb,MAAM,GAAG,EAApB,IAA0B,EAF7B,CAJF,CARF,EAiBGE,OAAO,IAAI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCQ,WAArC,CAjBd,CADF;AAqBD,CArCD;;AAuCA,eAAef,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"../styles/components.scss\";\nimport movieImg from \"../images/movie.png\";\n\nconst MovieCard = ({ title, image, released, runtime, rating, synopsis }) => {\n  const [visible, setVisible] = useState(false);\n  const [imageSrc, changeImage] = useState(image);\n  function changeVisibleDescription() {\n    setVisible(!visible);\n  }\n  function changeImageSrc() {\n    changeImage(movieImg);\n  }\n  function showError() {\n    changeImageSrc();\n  }\n\n  const regex = /(<([^>]+)>)/gi;\n  const description = synopsis.replace(regex, \" \").replace(\"&#39;\", \"'\");\n\n  return (\n    <div\n      className={visible ? \"movie__card movie__card-preview\" : \"movie__card\"}\n      onMouseEnter={changeVisibleDescription}\n      onMouseLeave={changeVisibleDescription}\n    >\n      <div className=\"movie__img\">\n        <img src={imageSrc} onError={showError} alt=\"movie\"></img>\n      </div>\n      <div className=\"movie__info\">\n        <h2 className=\"movie__tit\">{title}</h2>\n        <h3 className=\"movie__year\">{released}</h3>\n        <p className=\"movie__time\">{runtime}</p>\n        <p className=\"movie__rate\">\n          <i className=\"material-icons\">star</i>\n          {Math.round(rating * 10) / 10}\n        </p>\n      </div>\n      {visible && <div className=\"movie__description\">{description}</div>}\n    </div>\n  );\n};\n\nexport default MovieCard;\n"]},"metadata":{},"sourceType":"module"}